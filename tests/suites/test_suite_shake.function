/* BEGIN_HEADER */
#include "mbedtls/shake256.h"
/* END_HEADER */

/* BEGIN_DEPENDENCIES
 * depends_on:MBEDTLS_SHAKE256_C
 * END_DEPENDENCIES
 */

/* BEGIN_CASE */
void mbedtls_shake256( data_t *in, data_t *hash )
{
    unsigned char *output = NULL;
    
    ASSERT_ALLOC( output, hash->len );

    TEST_ASSERT( mbedtls_shake256( in->x, in->len, output, hash->len ) == 0 );

    ASSERT_COMPARE( output, hash->len, hash->x, hash->len );

exit:
    mbedtls_free( output );
}
/* END_CASE */

/* BEGIN_CASE */
void mbedtls_shake256_multi( data_t *in, data_t *hash )
{
    unsigned char *output = NULL;
    mbedtls_shake256_context ctx;
    const int block_size = 256;
    
    ASSERT_ALLOC( output, hash->len );
    
    mbedtls_shake256_init( &ctx );
    mbedtls_shake256_starts( &ctx );
    
    for( size_t l = 0; l < in->len; l += block_size )
        TEST_ASSERT( mbedtls_shake256_update( &ctx, in->x + l, MIN( in->len - l, block_size ) ) == 0 );

    TEST_ASSERT( mbedtls_shake256_finish( &ctx, output, hash->len ) == 0 );

    ASSERT_COMPARE( output, hash->len, hash->x, hash->len );

exit:
    mbedtls_free( output );
}
/* END_CASE */