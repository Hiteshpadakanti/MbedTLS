#!/bin/sh

# tls13-psk_ephemeral.sh
#
# Copyright The Mbed TLS Contributors
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Purpose
#
# List TLS1.3 test cases. They are generated by
# `./tests/scripts/generate_tls13_compat_tests.py -o tests/opt-testcases`.
#
# PLEASE DO NOT EDIT THIS FILE. IF NEEDED, PLEASE MODIFY `generate_tls13_compat_tests.py`
# OR PYTHON FILES IN `tests/scripts/tls13_compat` AND REGENERATE THIS FILE.
#

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(secp256r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp256r1" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-256" \
         0 \
         -s "write selected_group: secp256r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(secp256r1->secp384r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp384r1" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-256:P-384" \
         0 \
         -s "write selected_group: secp384r1" \
         -s "HRR selected_group: secp384r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(secp256r1->secp521r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp521r1" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-256:P-521" \
         0 \
         -s "write selected_group: secp521r1" \
         -s "HRR selected_group: secp521r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(secp256r1->x25519) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x25519" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-256:X25519" \
         0 \
         -s "write selected_group: x25519" \
         -s "HRR selected_group: x25519" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(secp256r1->x448) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x448" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-256:X448" \
         0 \
         -s "write selected_group: x448" \
         -s "HRR selected_group: x448" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
requires_openssl_tls1_3_with_ffdh
run_test "TLS 1.3 O->m: psk_ephemeral group(secp256r1->ffdhe2048) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=ffdhe2048" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-256:ffdhe2048" \
         0 \
         -s "write selected_group: ffdhe2048" \
         -s "HRR selected_group: ffdhe2048" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(secp384r1->secp256r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp256r1" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-384:P-256" \
         0 \
         -s "write selected_group: secp256r1" \
         -s "HRR selected_group: secp256r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(secp384r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp384r1" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-384" \
         0 \
         -s "write selected_group: secp384r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(secp384r1->secp521r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp521r1" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-384:P-521" \
         0 \
         -s "write selected_group: secp521r1" \
         -s "HRR selected_group: secp521r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(secp384r1->x25519) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x25519" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-384:X25519" \
         0 \
         -s "write selected_group: x25519" \
         -s "HRR selected_group: x25519" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(secp384r1->x448) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x448" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-384:X448" \
         0 \
         -s "write selected_group: x448" \
         -s "HRR selected_group: x448" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
requires_openssl_tls1_3_with_ffdh
run_test "TLS 1.3 O->m: psk_ephemeral group(secp384r1->ffdhe2048) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=ffdhe2048" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-384:ffdhe2048" \
         0 \
         -s "write selected_group: ffdhe2048" \
         -s "HRR selected_group: ffdhe2048" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(secp521r1->secp256r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp256r1" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-521:P-256" \
         0 \
         -s "write selected_group: secp256r1" \
         -s "HRR selected_group: secp256r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(secp521r1->secp384r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp384r1" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-521:P-384" \
         0 \
         -s "write selected_group: secp384r1" \
         -s "HRR selected_group: secp384r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(secp521r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp521r1" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-521" \
         0 \
         -s "write selected_group: secp521r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(secp521r1->x25519) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x25519" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-521:X25519" \
         0 \
         -s "write selected_group: x25519" \
         -s "HRR selected_group: x25519" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(secp521r1->x448) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x448" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-521:X448" \
         0 \
         -s "write selected_group: x448" \
         -s "HRR selected_group: x448" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
requires_openssl_tls1_3_with_ffdh
run_test "TLS 1.3 O->m: psk_ephemeral group(secp521r1->ffdhe2048) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=ffdhe2048" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-521:ffdhe2048" \
         0 \
         -s "write selected_group: ffdhe2048" \
         -s "HRR selected_group: ffdhe2048" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(x25519->secp256r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp256r1" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X25519:P-256" \
         0 \
         -s "write selected_group: secp256r1" \
         -s "HRR selected_group: secp256r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(x25519->secp384r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp384r1" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X25519:P-384" \
         0 \
         -s "write selected_group: secp384r1" \
         -s "HRR selected_group: secp384r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(x25519->secp521r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp521r1" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X25519:P-521" \
         0 \
         -s "write selected_group: secp521r1" \
         -s "HRR selected_group: secp521r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(x25519) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x25519" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X25519" \
         0 \
         -s "write selected_group: x25519" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(x25519->x448) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x448" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X25519:X448" \
         0 \
         -s "write selected_group: x448" \
         -s "HRR selected_group: x448" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
requires_openssl_tls1_3_with_ffdh
run_test "TLS 1.3 O->m: psk_ephemeral group(x25519->ffdhe2048) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=ffdhe2048" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X25519:ffdhe2048" \
         0 \
         -s "write selected_group: ffdhe2048" \
         -s "HRR selected_group: ffdhe2048" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(x448->secp256r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp256r1" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X448:P-256" \
         0 \
         -s "write selected_group: secp256r1" \
         -s "HRR selected_group: secp256r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(x448->secp384r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp384r1" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X448:P-384" \
         0 \
         -s "write selected_group: secp384r1" \
         -s "HRR selected_group: secp384r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(x448->secp521r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp521r1" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X448:P-521" \
         0 \
         -s "write selected_group: secp521r1" \
         -s "HRR selected_group: secp521r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(x448->x25519) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x25519" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X448:X25519" \
         0 \
         -s "write selected_group: x25519" \
         -s "HRR selected_group: x25519" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3
run_test "TLS 1.3 O->m: psk_ephemeral group(x448) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x448" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X448" \
         0 \
         -s "write selected_group: x448" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
requires_openssl_tls1_3_with_ffdh
run_test "TLS 1.3 O->m: psk_ephemeral group(x448->ffdhe2048) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=ffdhe2048" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X448:ffdhe2048" \
         0 \
         -s "write selected_group: ffdhe2048" \
         -s "HRR selected_group: ffdhe2048" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3_with_ffdh
run_test "TLS 1.3 O->m: psk_ephemeral group(ffdhe2048->secp256r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp256r1" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups ffdhe2048:P-256" \
         0 \
         -s "write selected_group: secp256r1" \
         -s "HRR selected_group: secp256r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3_with_ffdh
run_test "TLS 1.3 O->m: psk_ephemeral group(ffdhe2048->secp384r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp384r1" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups ffdhe2048:P-384" \
         0 \
         -s "write selected_group: secp384r1" \
         -s "HRR selected_group: secp384r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3_with_ffdh
run_test "TLS 1.3 O->m: psk_ephemeral group(ffdhe2048->secp521r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp521r1" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups ffdhe2048:P-521" \
         0 \
         -s "write selected_group: secp521r1" \
         -s "HRR selected_group: secp521r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3_with_ffdh
run_test "TLS 1.3 O->m: psk_ephemeral group(ffdhe2048->x25519) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x25519" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups ffdhe2048:X25519" \
         0 \
         -s "write selected_group: x25519" \
         -s "HRR selected_group: x25519" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_openssl_tls1_3_with_ffdh
run_test "TLS 1.3 O->m: psk_ephemeral group(ffdhe2048->x448) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x448" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups ffdhe2048:X448" \
         0 \
         -s "write selected_group: x448" \
         -s "HRR selected_group: x448" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
requires_openssl_tls1_3_with_ffdh
run_test "TLS 1.3 O->m: psk_ephemeral group(ffdhe2048) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=ffdhe2048" \
         "$O_NEXT_CLI_NO_CERT -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups ffdhe2048" \
         0 \
         -s "write selected_group: ffdhe2048" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(secp256r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp256r1" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-SECP256R1:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: secp256r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(secp256r1->secp384r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp384r1" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-SECP256R1:+GROUP-SECP384R1:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: secp384r1" \
         -s "HRR selected_group: secp384r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(secp256r1->secp521r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp521r1" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-SECP256R1:+GROUP-SECP521R1:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: secp521r1" \
         -s "HRR selected_group: secp521r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(secp256r1->x25519) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x25519" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-SECP256R1:+GROUP-X25519:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: x25519" \
         -s "HRR selected_group: x25519" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(secp256r1->x448) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x448" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-SECP256R1:+GROUP-X448:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: x448" \
         -s "HRR selected_group: x448" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(secp256r1->ffdhe2048) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=ffdhe2048" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-SECP256R1:+GROUP-FFDHE2048:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: ffdhe2048" \
         -s "HRR selected_group: ffdhe2048" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(secp384r1->secp256r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp256r1" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-SECP384R1:+GROUP-SECP256R1:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: secp256r1" \
         -s "HRR selected_group: secp256r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(secp384r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp384r1" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-SECP384R1:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: secp384r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(secp384r1->secp521r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp521r1" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-SECP384R1:+GROUP-SECP521R1:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: secp521r1" \
         -s "HRR selected_group: secp521r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(secp384r1->x25519) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x25519" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-SECP384R1:+GROUP-X25519:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: x25519" \
         -s "HRR selected_group: x25519" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(secp384r1->x448) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x448" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-SECP384R1:+GROUP-X448:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: x448" \
         -s "HRR selected_group: x448" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(secp384r1->ffdhe2048) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=ffdhe2048" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-SECP384R1:+GROUP-FFDHE2048:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: ffdhe2048" \
         -s "HRR selected_group: ffdhe2048" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(secp521r1->secp256r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp256r1" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-SECP521R1:+GROUP-SECP256R1:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: secp256r1" \
         -s "HRR selected_group: secp256r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(secp521r1->secp384r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp384r1" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-SECP521R1:+GROUP-SECP384R1:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: secp384r1" \
         -s "HRR selected_group: secp384r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(secp521r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp521r1" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-SECP521R1:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: secp521r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(secp521r1->x25519) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x25519" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-SECP521R1:+GROUP-X25519:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: x25519" \
         -s "HRR selected_group: x25519" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(secp521r1->x448) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x448" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-SECP521R1:+GROUP-X448:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: x448" \
         -s "HRR selected_group: x448" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(secp521r1->ffdhe2048) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=ffdhe2048" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-SECP521R1:+GROUP-FFDHE2048:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: ffdhe2048" \
         -s "HRR selected_group: ffdhe2048" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(x25519->secp256r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp256r1" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-X25519:+GROUP-SECP256R1:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: secp256r1" \
         -s "HRR selected_group: secp256r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(x25519->secp384r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp384r1" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-X25519:+GROUP-SECP384R1:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: secp384r1" \
         -s "HRR selected_group: secp384r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(x25519->secp521r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp521r1" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-X25519:+GROUP-SECP521R1:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: secp521r1" \
         -s "HRR selected_group: secp521r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(x25519) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x25519" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-X25519:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: x25519" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(x25519->x448) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x448" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-X25519:+GROUP-X448:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: x448" \
         -s "HRR selected_group: x448" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(x25519->ffdhe2048) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=ffdhe2048" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-X25519:+GROUP-FFDHE2048:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: ffdhe2048" \
         -s "HRR selected_group: ffdhe2048" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(x448->secp256r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp256r1" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-X448:+GROUP-SECP256R1:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: secp256r1" \
         -s "HRR selected_group: secp256r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(x448->secp384r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp384r1" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-X448:+GROUP-SECP384R1:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: secp384r1" \
         -s "HRR selected_group: secp384r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(x448->secp521r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp521r1" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-X448:+GROUP-SECP521R1:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: secp521r1" \
         -s "HRR selected_group: secp521r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(x448->x25519) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x25519" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-X448:+GROUP-X25519:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: x25519" \
         -s "HRR selected_group: x25519" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(x448) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x448" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-X448:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: x448" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(x448->ffdhe2048) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=ffdhe2048" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-X448:+GROUP-FFDHE2048:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: ffdhe2048" \
         -s "HRR selected_group: ffdhe2048" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
requires_gnutls_tls1_3
run_test "TLS 1.3 G->m: psk_ephemeral group(ffdhe2048) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=ffdhe2048" \
         "$G_NEXT_CLI_NO_CERT --debug=4 --single-key-share --priority NONE:+VERS-TLS1.3:+CIPHER-ALL:+MAC-ALL:+SIGN-ALL:+GROUP-FFDHE2048:+ECDHE-PSK:+DHE-PSK --pskusername Client_identity --pskkey 6162636465666768696a6b6c6d6e6f70 localhost" \
         0 \
         -s "write selected_group: ffdhe2048" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -s "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(secp256r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp256r1" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp256r1" \
         0 \
         -s "write selected_group: secp256r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(secp256r1->secp384r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp384r1" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp256r1,secp384r1" \
         0 \
         -s "write selected_group: secp384r1" \
         -s "HRR selected_group: secp384r1" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(secp256r1->secp521r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp521r1" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp256r1,secp521r1" \
         0 \
         -s "write selected_group: secp521r1" \
         -s "HRR selected_group: secp521r1" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(secp256r1->x25519) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x25519" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp256r1,x25519" \
         0 \
         -s "write selected_group: x25519" \
         -s "HRR selected_group: x25519" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(secp256r1->x448) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x448" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp256r1,x448" \
         0 \
         -s "write selected_group: x448" \
         -s "HRR selected_group: x448" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->m: psk_ephemeral group(secp256r1->ffdhe2048) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=ffdhe2048" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp256r1,ffdhe2048" \
         0 \
         -s "write selected_group: ffdhe2048" \
         -s "HRR selected_group: ffdhe2048" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(secp384r1->secp256r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp256r1" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp384r1,secp256r1" \
         0 \
         -s "write selected_group: secp256r1" \
         -s "HRR selected_group: secp256r1" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(secp384r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp384r1" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp384r1" \
         0 \
         -s "write selected_group: secp384r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(secp384r1->secp521r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp521r1" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp384r1,secp521r1" \
         0 \
         -s "write selected_group: secp521r1" \
         -s "HRR selected_group: secp521r1" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(secp384r1->x25519) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x25519" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp384r1,x25519" \
         0 \
         -s "write selected_group: x25519" \
         -s "HRR selected_group: x25519" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(secp384r1->x448) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x448" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp384r1,x448" \
         0 \
         -s "write selected_group: x448" \
         -s "HRR selected_group: x448" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->m: psk_ephemeral group(secp384r1->ffdhe2048) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=ffdhe2048" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp384r1,ffdhe2048" \
         0 \
         -s "write selected_group: ffdhe2048" \
         -s "HRR selected_group: ffdhe2048" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(secp521r1->secp256r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp256r1" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp521r1,secp256r1" \
         0 \
         -s "write selected_group: secp256r1" \
         -s "HRR selected_group: secp256r1" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(secp521r1->secp384r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp384r1" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp521r1,secp384r1" \
         0 \
         -s "write selected_group: secp384r1" \
         -s "HRR selected_group: secp384r1" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(secp521r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp521r1" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp521r1" \
         0 \
         -s "write selected_group: secp521r1" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(secp521r1->x25519) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x25519" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp521r1,x25519" \
         0 \
         -s "write selected_group: x25519" \
         -s "HRR selected_group: x25519" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(secp521r1->x448) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x448" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp521r1,x448" \
         0 \
         -s "write selected_group: x448" \
         -s "HRR selected_group: x448" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->m: psk_ephemeral group(secp521r1->ffdhe2048) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=ffdhe2048" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp521r1,ffdhe2048" \
         0 \
         -s "write selected_group: ffdhe2048" \
         -s "HRR selected_group: ffdhe2048" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(x25519->secp256r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp256r1" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x25519,secp256r1" \
         0 \
         -s "write selected_group: secp256r1" \
         -s "HRR selected_group: secp256r1" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(x25519->secp384r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp384r1" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x25519,secp384r1" \
         0 \
         -s "write selected_group: secp384r1" \
         -s "HRR selected_group: secp384r1" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(x25519->secp521r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp521r1" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x25519,secp521r1" \
         0 \
         -s "write selected_group: secp521r1" \
         -s "HRR selected_group: secp521r1" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(x25519) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x25519" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x25519" \
         0 \
         -s "write selected_group: x25519" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(x25519->x448) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x448" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x25519,x448" \
         0 \
         -s "write selected_group: x448" \
         -s "HRR selected_group: x448" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->m: psk_ephemeral group(x25519->ffdhe2048) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=ffdhe2048" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x25519,ffdhe2048" \
         0 \
         -s "write selected_group: ffdhe2048" \
         -s "HRR selected_group: ffdhe2048" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(x448->secp256r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp256r1" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x448,secp256r1" \
         0 \
         -s "write selected_group: secp256r1" \
         -s "HRR selected_group: secp256r1" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(x448->secp384r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp384r1" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x448,secp384r1" \
         0 \
         -s "write selected_group: secp384r1" \
         -s "HRR selected_group: secp384r1" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(x448->secp521r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp521r1" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x448,secp521r1" \
         0 \
         -s "write selected_group: secp521r1" \
         -s "HRR selected_group: secp521r1" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(x448->x25519) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x25519" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x448,x25519" \
         0 \
         -s "write selected_group: x25519" \
         -s "HRR selected_group: x25519" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->m: psk_ephemeral group(x448) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x448" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x448" \
         0 \
         -s "write selected_group: x448" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->m: psk_ephemeral group(x448->ffdhe2048) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=ffdhe2048" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x448,ffdhe2048" \
         0 \
         -s "write selected_group: ffdhe2048" \
         -s "HRR selected_group: ffdhe2048" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->m: psk_ephemeral group(ffdhe2048->secp256r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp256r1" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=ffdhe2048,secp256r1" \
         0 \
         -s "write selected_group: secp256r1" \
         -s "HRR selected_group: secp256r1" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->m: psk_ephemeral group(ffdhe2048->secp384r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp384r1" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=ffdhe2048,secp384r1" \
         0 \
         -s "write selected_group: secp384r1" \
         -s "HRR selected_group: secp384r1" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->m: psk_ephemeral group(ffdhe2048->secp521r1) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=secp521r1" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=ffdhe2048,secp521r1" \
         0 \
         -s "write selected_group: secp521r1" \
         -s "HRR selected_group: secp521r1" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->m: psk_ephemeral group(ffdhe2048->x25519) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x25519" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=ffdhe2048,x25519" \
         0 \
         -s "write selected_group: x25519" \
         -s "HRR selected_group: x25519" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->m: psk_ephemeral group(ffdhe2048->x448) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=x448" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=ffdhe2048,x448" \
         0 \
         -s "write selected_group: x448" \
         -s "HRR selected_group: x448" \
         -c "received HelloRetryRequest message" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_config_enabled MBEDTLS_SSL_SRV_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->m: psk_ephemeral group(ffdhe2048) check, good" \
         "$P_SRV debug_level=5 tls13_kex_modes=psk_ephemeral $(get_srv_psk_list) groups=ffdhe2048" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=ffdhe2048" \
         0 \
         -s "write selected_group: ffdhe2048" \
         -s "ClientHello: supported_groups(10) extension exists." \
         -S "ClientHello: signature_algorithms(13) extension exists." \
         -s "ClientHello: pre_shared_key(41) extension exists." \
         -s "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -s "ClientHello: key_share(51) extension exists." \
         -s "Found PSK_EPHEMERAL KEX MODE" \
         -S "Found PSK KEX MODE" \
         -s "Pre shared key found" \
         -S "No matched PSK or ticket" \
         -S "Invalid binder." \
         -S "key exchange mode: psk$" \
         -s "key exchange mode: psk_ephemeral$" \
         -S "key exchange mode: ephemeral$" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(secp256r1) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-SECP256R1 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp256r1" \
         0 \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(secp256r1->secp384r1) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-SECP384R1 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp256r1,secp384r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(secp256r1->secp521r1) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-SECP521R1 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp256r1,secp521r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(secp256r1->x25519) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-X25519 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp256r1,x25519" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(secp256r1->x448) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-X448 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp256r1,x448" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->G: psk_ephemeral group(secp256r1->ffdhe2048) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-FFDHE2048 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp256r1,ffdhe2048" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(secp384r1->secp256r1) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-SECP256R1 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp384r1,secp256r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(secp384r1) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-SECP384R1 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp384r1" \
         0 \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(secp384r1->secp521r1) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-SECP521R1 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp384r1,secp521r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(secp384r1->x25519) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-X25519 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp384r1,x25519" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(secp384r1->x448) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-X448 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp384r1,x448" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->G: psk_ephemeral group(secp384r1->ffdhe2048) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-FFDHE2048 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp384r1,ffdhe2048" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(secp521r1->secp256r1) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-SECP256R1 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp521r1,secp256r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(secp521r1->secp384r1) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-SECP384R1 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp521r1,secp384r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(secp521r1) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-SECP521R1 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp521r1" \
         0 \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(secp521r1->x25519) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-X25519 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp521r1,x25519" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(secp521r1->x448) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-X448 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp521r1,x448" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->G: psk_ephemeral group(secp521r1->ffdhe2048) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-FFDHE2048 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp521r1,ffdhe2048" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(x25519->secp256r1) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-SECP256R1 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x25519,secp256r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(x25519->secp384r1) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-SECP384R1 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x25519,secp384r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(x25519->secp521r1) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-SECP521R1 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x25519,secp521r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(x25519) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-X25519 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x25519" \
         0 \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(x25519->x448) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-X448 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x25519,x448" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->G: psk_ephemeral group(x25519->ffdhe2048) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-FFDHE2048 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x25519,ffdhe2048" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(x448->secp256r1) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-SECP256R1 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x448,secp256r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(x448->secp384r1) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-SECP384R1 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x448,secp384r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(x448->secp521r1) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-SECP521R1 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x448,secp521r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(x448->x25519) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-X25519 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x448,x25519" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->G: psk_ephemeral group(x448) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-X448 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x448" \
         0 \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->G: psk_ephemeral group(x448->ffdhe2048) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-FFDHE2048 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x448,ffdhe2048" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->G: psk_ephemeral group(ffdhe2048->secp256r1) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-SECP256R1 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=ffdhe2048,secp256r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->G: psk_ephemeral group(ffdhe2048->secp384r1) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-SECP384R1 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=ffdhe2048,secp384r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->G: psk_ephemeral group(ffdhe2048->secp521r1) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-SECP521R1 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=ffdhe2048,secp521r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->G: psk_ephemeral group(ffdhe2048->x25519) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-X25519 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=ffdhe2048,x25519" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->G: psk_ephemeral group(ffdhe2048->x448) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-X448 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=ffdhe2048,x448" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_gnutls_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->G: psk_ephemeral group(ffdhe2048) check, good" \
         "$G_NEXT_SRV_NO_CERT --http --disable-client-cert --debug=4 --x509certfile data_files/ecdsa_secp256r1.crt --x509keyfile data_files/ecdsa_secp256r1.key --priority NORMAL:-VERS-ALL:+VERS-TLS1.3:-KX-ALL:+ECDHE-PSK:+DHE-PSK:-PSK:+SIGN-ALL:-GROUP-ALL:+GROUP-FFDHE2048 --pskpasswd data_files/passwd.psk" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=ffdhe2048" \
         0 \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(secp256r1) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-256" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp256r1" \
         0 \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(secp256r1->secp384r1) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-384" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp256r1,secp384r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(secp256r1->secp521r1) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-521" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp256r1,secp521r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(secp256r1->x25519) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X25519" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp256r1,x25519" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(secp256r1->x448) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X448" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp256r1,x448" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3_with_ffdh
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->O: psk_ephemeral group(secp256r1->ffdhe2048) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups ffdhe2048" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp256r1,ffdhe2048" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(secp384r1->secp256r1) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-256" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp384r1,secp256r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(secp384r1) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-384" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp384r1" \
         0 \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(secp384r1->secp521r1) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-521" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp384r1,secp521r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(secp384r1->x25519) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X25519" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp384r1,x25519" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(secp384r1->x448) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X448" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp384r1,x448" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3_with_ffdh
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->O: psk_ephemeral group(secp384r1->ffdhe2048) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups ffdhe2048" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp384r1,ffdhe2048" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(secp521r1->secp256r1) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-256" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp521r1,secp256r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(secp521r1->secp384r1) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-384" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp521r1,secp384r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(secp521r1) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-521" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp521r1" \
         0 \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(secp521r1->x25519) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X25519" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp521r1,x25519" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(secp521r1->x448) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X448" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp521r1,x448" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3_with_ffdh
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->O: psk_ephemeral group(secp521r1->ffdhe2048) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups ffdhe2048" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=secp521r1,ffdhe2048" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(x25519->secp256r1) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-256" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x25519,secp256r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(x25519->secp384r1) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-384" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x25519,secp384r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(x25519->secp521r1) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-521" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x25519,secp521r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(x25519) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X25519" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x25519" \
         0 \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(x25519->x448) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X448" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x25519,x448" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3_with_ffdh
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->O: psk_ephemeral group(x25519->ffdhe2048) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups ffdhe2048" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x25519,ffdhe2048" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(x448->secp256r1) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-256" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x448,secp256r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(x448->secp384r1) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-384" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x448,secp384r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(x448->secp521r1) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-521" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x448,secp521r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(x448->x25519) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X25519" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x448,x25519" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
run_test "TLS 1.3 m->O: psk_ephemeral group(x448) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X448" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x448" \
         0 \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3_with_ffdh
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->O: psk_ephemeral group(x448->ffdhe2048) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups ffdhe2048" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=x448,ffdhe2048" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->O: psk_ephemeral group(ffdhe2048->secp256r1) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-256" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=ffdhe2048,secp256r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->O: psk_ephemeral group(ffdhe2048->secp384r1) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-384" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=ffdhe2048,secp384r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->O: psk_ephemeral group(ffdhe2048->secp521r1) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups P-521" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=ffdhe2048,secp521r1" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->O: psk_ephemeral group(ffdhe2048->x25519) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X25519" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=ffdhe2048,x25519" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_ECDH
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->O: psk_ephemeral group(ffdhe2048->x448) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups X448" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=ffdhe2048,x448" \
         0 \
         -c "received HelloRetryRequest message" \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"

requires_openssl_tls1_3_with_ffdh
requires_config_enabled MBEDTLS_SSL_CLI_C
requires_config_enabled MBEDTLS_DEBUG_C
requires_config_enabled MBEDTLS_SSL_PROTO_TLS1_3
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED
requires_config_enabled MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
requires_config_enabled PSA_WANT_ALG_FFDH
run_test "TLS 1.3 m->O: psk_ephemeral group(ffdhe2048) check, good" \
         "$O_NEXT_SRV_NO_CERT -cert data_files/ecdsa_secp256r1.crt -key data_files/ecdsa_secp256r1.key -tls1_3 -msg -psk_identity Client_identity -psk 6162636465666768696a6b6c6d6e6f70 -groups ffdhe2048" \
         "$P_CLI debug_level=5 force_version=tls13 tls13_kex_modes=psk_ephemeral psk_identity=Client_identity psk=6162636465666768696a6b6c6d6e6f70 groups=ffdhe2048" \
         0 \
         -c "ClientHello: supported_groups(10) extension exists." \
         -C "ClientHello: signature_algorithms(13) extension exists." \
         -c "ClientHello: pre_shared_key(41) extension exists." \
         -c "ClientHello: psk_key_exchange_modes(45) extension exists." \
         -c "ClientHello: key_share(51) extension exists." \
         -c "Adding PSK-ECDHE key exchange mode" \
         -C "Adding pure PSK key exchange mode" \
         -c "ServerHello: pre_shared_key(41) extension exists." \
         -c "ServerHello: key_share(51) extension exists." \
         -c "Selected key exchange mode: psk_ephemeral$"
